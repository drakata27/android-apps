package com.example.textinputexercses;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.Toast;

import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;

public class MainActivity extends AppCompatActivity {

    TextInputLayout tInputUsername, tInputPassword;
    TextInputEditText tuserName, tpassword;
    AutoCompleteTextView autoCompleteText;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        tInputUsername = (TextInputLayout) findViewById(R.id.usernameInputLayout);
        tuserName = (TextInputEditText) findViewById(R.id.usernameText);

        tInputPassword = (TextInputLayout) findViewById(R.id.passwordInputLayout);
        tpassword = (TextInputEditText) findViewById(R.id.passwordText);

        autoCompleteText = (AutoCompleteTextView) findViewById(R.id.autoCompleteTextView);
        String [] names = {"John","Jake","James","Jane","Jameson","Jonathan"};
        // array adapter is the way to attach an array to a component
        ArrayAdapter<String> myAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_dropdown_item_1line, names);
        autoCompleteText.setThreshold(1);//number of characters needed
        // after one character the user type, this will start showing names
        autoCompleteText.setAdapter(myAdapter);



        int userHint = R.string.enter_username;
        int passHint = R.string.enter_password;

        setupFloatingLabelError(tInputUsername,userHint);
        setupFloatingLabelError(tInputPassword,passHint);

    }

    private void setupFloatingLabelError(TextInputLayout tinput, int hint) {
        final TextInputLayout floatingUsernameLabel = tinput;
        floatingUsernameLabel.getEditText().addTextChangedListener(new TextWatcher() {
            // ...
            @Override
            public void onTextChanged(CharSequence text, int start, int count, int after) {
                if (text.length() > 0 && text.length() <= 4) {
                    floatingUsernameLabel.setError(getString(R.string.enter_username));
                    floatingUsernameLabel.setErrorEnabled(true);
                } else {
                    floatingUsernameLabel.setErrorEnabled(false);
                }
            }
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count,
                                          int after) {
                // TODO Auto-generated method stub
            }

            @Override
            public void afterTextChanged(Editable s) {

            }
        });
    }

    public void buttonClick(View view) {

        Toast.makeText(getApplicationContext(),"The username and password should be checked here to validate credentials.",Toast.LENGTH_SHORT).show();
    }
}